name: Build and Test

# Triggers the workflow on push event to any branch, pull request to main,
# or can be triggered manually
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      runtime: linux-x64

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test with coverage
      run: dotnet test --no-build --configuration Release --verbosity normal --filter "Category!=LocalOnly" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/coverage/
    
    - name: Generate coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:"./tests/**/coverage.cobertura.xml" -targetdir:"./TestResults/CoverageReport" -reporttypes:"Html;Cobertura;JsonSummary"

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: ./TestResults/CoverageReport
        if-no-files-found: warn
    - name: Publish Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: ./TestResults/CoverageReport/Cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Publish
      run: dotnet publish src/MainApp/CrowsNestMqtt.App.csproj --configuration Release --self-contained -p:PublishSingleFile=true -o ./publish/${{ matrix.runtime }}
    